class QrScanner{static hasCamera(){return navigator.mediaDevices.enumerateDevices().then(e=>e.some(e=>"videoinput"===e.kind))}constructor(e,t,a={}){if(this.$video=e,this.$onDecode=t,this.$onDecodeError=a.onDecodeError,this.$canvas=document.createElement("canvas"),this._active=!1,this._paused=!1,this._flashOn=!1,this._legacyMode=!1,this._destroyed=!1,this._flashlightCompatible=!1,this._qrEnginePromise=null,this._stopOnRead=a.stopOnRead??!1,this._preferredCamera=a.preferredCamera,this._highlightScanRegion=a.highlightScanRegion??!1,this._maxScansPerSecond=a.maxScansPerSecond??25,this._scanRegion=null,this._calculateScanRegion=a.calculateScanRegion??QrScanner._defaultCalculateScanRegion,this._canvasContext=this.$canvas.getContext("2d",{willReadFrequently:!0}),!navigator.mediaDevices)throw new Error("MediaDevices interface not available.");this._onCanPlay=this._onCanPlay.bind(this),this._onPlay=this._onPlay.bind(this)}start(){if(this._destroyed)throw new Error("This QrScanner instance was destroyed. Create a new instance.");if(this._active)return Promise.resolve();this._active=!0;const e=this._qrEnginePromise??QrScanner.createQrEngine().then(e=>(this._qrEngine=e,e));return e.then(()=>this._startVideoStream()).then(()=>this._scanFrame()).catch(e=>(this._active=!1,this._paused=!1,Promise.reject(e)))}stop(){this._active=!1,this._paused=!1,this._stopVideoStream()}pause(){this._paused=!0}resume(){this._paused=!1,this._active&&this._scanFrame()}destroy(){this.stop(),this._destroyed=!0}static createQrEngine(){return import("./qr-scanner-worker.min.js").then(e=>e.default)}static _defaultCalculateScanRegion(e){return{sx:0,sy:0,sWidth:e.videoWidth,sHeight:e.videoHeight}}_startVideoStream(){return this._streamPromise??(this._streamPromise=navigator.mediaDevices.getUserMedia({video:{facingMode:this._preferredCamera??"environment"}}).then(e=>(this._videoStream=e,this.$video.srcObject=e,new Promise((t,a)=>{this.$video.addEventListener("loadedmetadata",()=>{this.$video.play().then(t).catch(a)},!{once:!0})}))).finally(()=>{this._streamPromise=null})}_stopVideoStream(){this.$video.srcObject=null,this._videoStream&&this._videoStream.getTracks().forEach(e=>e.stop()),this._videoStream=null}_scanFrame(){if(this._paused||!this._active||this._destroyed)return;const e=performance.now();this._lastScanRequest=e;const t=this._calculateScanRegion(this.$video),a=this.$canvas,n=this._canvasContext;a.width=t.sWidth,a.height=t.sHeight,n.drawImage(this.$video,t.sx,t.sy,t.sWidth,t.sHeight,0,0,t.sWidth,t.sHeight);try{const e=n.getImageData(0,0,t.sWidth,t.sHeight);this._qrEnginePromise.then(async a=>{try{const n=await a.scanImage(e);n&&this.$onDecode(n),this._stopOnRead?n&&this.stop():this._scanFrame()}catch(e){this.$onDecodeError?.(e),this._scanFrame()}})}catch(t){this.$onDecodeError?.(t),this._scanFrame()}}}
export default QrScanner;

